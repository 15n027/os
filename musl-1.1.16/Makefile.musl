#
# Makefile for musl (requires GNU make)
#
# This is how simple every makefile should be...
# No, I take that back - actually most should be less than half this size.
#
# Use config.mak to override any of the following variables.
# Do not make changes here.
#
TOPDIR := ..
include $(TOPDIR)/build/defs.mk
srcdir = .
exec_prefix = /usr/local
bindir = $(exec_prefix)/bin

prefix = /usr/local/musl
includedir = $(prefix)/include
libdir = $(prefix)/lib
syslibdir = /lib

SRC_DIRS = $(addprefix $(srcdir)/,src/*)
BASE_GLOBS = $(addsuffix /*.c,$(SRC_DIRS))
ARCH_GLOBS = $(addsuffix /$(ARCH)/*.[csS],$(SRC_DIRS))
BASE_SRCS = $(sort $(wildcard $(BASE_GLOBS)))
ARCH_SRCS = $(sort $(wildcard $(ARCH_GLOBS)))
BASE_OBJS = $(patsubst $(srcdir)/%,%.o,$(basename $(BASE_SRCS)))
ARCH_OBJS = $(patsubst $(srcdir)/%,%.o,$(basename $(ARCH_SRCS)))
REPLACED_OBJS = $(sort $(subst /$(ARCH)/,/,$(ARCH_OBJS)))
ALL_OBJS = $(addprefix $(OBJDIR)/, $(filter-out $(REPLACED_OBJS), $(sort $(BASE_OBJS) $(ARCH_OBJS))))

LIBC_OBJS = $(filter $(OBJDIR)/src/%,$(ALL_OBJS))
AOBJS = $(LIBC_OBJS)
LOBJS = $(LIBC_OBJS:.o=.lo)
GENH = $(OBJDIR)/include/bits/alltypes.h $(OBJDIR)/include/bits/syscall.h
GENH_INT = $(OBJDIR)/src/internal/version.h
IMPH = $(addprefix $(srcdir)/, src/internal/stdio_impl.h src/internal/pthread_impl.h src/internal/libc.h)

LDFLAGS =
LDFLAGS_AUTO =
LIBCC = -lgcc
CPPFLAGS =
CFLAGS =
CFLAGS_AUTO = -Os -pipe
CFLAGS_C99FSE = -std=c99 -ffreestanding -nostdinc 

CFLAGS_ALL = $(CFLAGS_C99FSE)
CFLAGS_ALL += -D_XOPEN_SOURCE=700 -I$(srcdir)/arch/$(ARCH) -I$(srcdir)/arch/generic -I$(OBJDIR)/src/internal -I$(srcdir)/src/internal -I$(OBJDIR)/include -I$(srcdir)/include
CFLAGS_ALL += $(CPPFLAGS) $(CFLAGS_AUTO) $(CFLAGS)

LDFLAGS_ALL = $(LDFLAGS_AUTO) $(LDFLAGS)

AR      = $(CROSS_COMPILE)ar
RANLIB  = $(CROSS_COMPILE)ranlib
INSTALL = $(srcdir)/tools/install.sh

ARCH_INCLUDES = $(wildcard $(srcdir)/arch/$(ARCH)/bits/*.h)
GENERIC_INCLUDES = $(wildcard $(srcdir)/arch/generic/bits/*.h)
INCLUDES = $(wildcard $(srcdir)/include/*.h $(srcdir)/include/*/*.h)
ALL_INCLUDES = $(sort $(INCLUDES:$(srcdir)/%=%) $(GENH:$(OBJDIR)/%=%) $(ARCH_INCLUDES:$(srcdir)/arch/$(ARCH)/%=include/%) $(GENERIC_INCLUDES:$(srcdir)/arch/generic/%=include/%))

EMPTY_LIB_NAMES = m rt crypt util
EMPTY_LIBS = $(EMPTY_LIB_NAMES:%=$(LIBDIR)/lib%.a)
STATIC_LIBS = $(LIBDIR)/libc.a
SHARED_LIBS = $(LIBDIR)/libc.so
TOOL_LIBS = $(LIBDIR)/musl-gcc.specs
ALL_LIBS = $(STATIC_LIBS) $(EMPTY_LIBS) $(TOOL_LIBS)
ALL_TOOLS = $(OBJDIR)/musl-gcc

WRAPCC_GCC = gcc
WRAPCC_CLANG = clang

-include $(OBJDIR)/config.mak

ifeq ($(ARCH),)

all:
	@echo "Please set ARCH in config.mak before running make."
	@exit 1

else

all: $(ALL_LIBS) $(ALL_TOOLS)

OBJ_DIRS = $(sort $(patsubst %/,%,$(dir $(ALL_LIBS) $(ALL_TOOLS) $(ALL_OBJS) $(GENH) $(GENH_INT))) $(OBJDIR)/include)

$(ALL_LIBS) $(ALL_TOOLS) $(ALL_OBJS) $(ALL_OBJS:%.o=%.lo) $(GENH) $(GENH_INT): | $(OBJ_DIRS)

$(OBJ_DIRS):
	@mkdir -p $@

$(OBJDIR)/include/bits/alltypes.h: $(srcdir)/arch/$(ARCH)/bits/alltypes.h.in $(srcdir)/include/alltypes.h.in $(srcdir)/tools/mkalltypes.sed
	@sed -f $(srcdir)/tools/mkalltypes.sed $(srcdir)/arch/$(ARCH)/bits/alltypes.h.in $(srcdir)/include/alltypes.h.in > $@

$(OBJDIR)/include/bits/syscall.h: $(srcdir)/arch/$(ARCH)/bits/syscall.h.in
	@cp $< $@
	@sed -n -e s/__NR_/SYS_/p < $< >> $@

$(OBJDIR)/src/internal/version.h: $(wildcard $(srcdir)/VERSION $(srcdir)/.git)
	@printf '#define VERSION "%s"\n' "$$(cd $(srcdir); sh tools/version.sh)" > $@

$(OBJDIR)/src/internal/version.o $(OBJDIR)/src/internal/version.lo: $(OBJDIR)/src/internal/version.h

OPTIMIZE_SRCS = $(wildcard $(OPTIMIZE_GLOBS:%=$(srcdir)/src/%))
$(OPTIMIZE_SRCS:$(srcdir)/%.c=$(OBJDIR)/%.o) $(OPTIMIZE_SRCS:$(srcdir)/%.c=$(OBJDIR)/%.lo): CFLAGS += -O3

MEMOPS_SRCS = src/string/memcpy.c src/string/memmove.c src/string/memcmp.c src/string/memset.c
$(MEMOPS_SRCS:%.c=$(OBJDIR)/%.o) $(MEMOPS_SRCS:%.c=$(OBJDIR)/%.lo): CFLAGS_ALL += $(CFLAGS_MEMOPS)

CC_CMD = $(CC) $(CFLAGS_ALL) -c -o $@ $<

# Choose invocation of assembler to be used
ifeq ($(ADD_CFI),yes)
	AS_CMD = LC_ALL=C awk -f $(srcdir)/tools/add-cfi.common.awk -f $(srcdir)/tools/add-cfi.$(ARCH).awk $< | $(CC) $(CFLAGS_ALL) -x assembler -c -o $@ -
else
	AS_CMD = $(CC_CMD)
endif

$(OBJDIR)/%.o: $(srcdir)/%.s
	@$(AS_CMD)

$(OBJDIR)/%.o: $(srcdir)/%.S
	@$(CC_CMD)

$(OBJDIR)/%.o: $(srcdir)/%.c $(GENH) $(IMPH)
	@$(CC_CMD)

$(OBJDIR)/%.lo: $(srcdir)/%.s
	@$(AS_CMD)

$(OBJDIR)/%.lo: $(srcdir)/%.S
	@$(CC_CMD)

$(OBJDIR)/%.lo: $(srcdir)/%.c $(GENH) $(IMPH)
	@$(CC_CMD)

$(LIBDIR)/libc.a: $(AOBJS)
	rm -f $@
	@$(AR) rc $@ $(AOBJS)
	@$(RANLIB) $@

$(EMPTY_LIBS):
	@rm -f $@
	@$(AR) rc $@


$(OBJDIR)/musl-gcc: config.mak
	@printf '#!/bin/sh\nexec "$${REALGCC:-$(WRAPCC_GCC)}" "$$@" -specs "%s/musl-gcc.specs"\n' "$(libdir)" > $@
	@chmod +x $@

$(DESTDIR)$(bindir)/%: $(OBJDIR)/%
	@$(INSTALL) -D $< $@

$(DESTDIR)$(libdir)/%.so: $(LIBDIR)/%.so
	@$(INSTALL) -D -m 755 $< $@

$(DESTDIR)$(libdir)/%: $(LIBDIR)/%
	@$(INSTALL) -D -m 644 $< $@

$(DESTDIR)$(includedir)/bits/%: $(srcdir)/arch/$(ARCH)/bits/%
	@$(INSTALL) -D -m 644 $< $@

$(DESTDIR)$(includedir)/bits/%: $(srcdir)/arch/generic/bits/%
	@$(INSTALL) -D -m 644 $< $@

$(DESTDIR)$(includedir)/bits/%: $(OBJDIR)/include/bits/%
	@$(INSTALL) -D -m 644 $< $@

$(DESTDIR)$(includedir)/%: $(srcdir)/include/%
	@$(INSTALL) -D -m 644 $< $@

install-libs: $(ALL_LIBS:$(LIBDIR)/%=$(DESTDIR)$(libdir)/%) $(if $(SHARED_LIBS),)

install-headers: $(ALL_INCLUDES:include/%=$(DESTDIR)$(includedir)/%)

install-tools: $(ALL_TOOLS:$(OBJDIR)/%=$(DESTDIR)$(bindir)/%)

install: install-libs install-headers install-tools

musl-git-%.tar.gz: .git
	 git --git-dir=$(srcdir)/.git archive --format=tar.gz --prefix=$(patsubst %.tar.gz,%,$@)/ -o $@ $(patsubst musl-git-%.tar.gz,%,$@)

musl-%.tar.gz: .git
	 git --git-dir=$(srcdir)/.git archive --format=tar.gz --prefix=$(patsubst %.tar.gz,%,$@)/ -o $@ v$(patsubst musl-%.tar.gz,%,$@)

endif

clean:
	@rm -rf obj lib

distclean: clean
	@rm -f config.mak

.PHONY: all clean install install-libs install-headers install-tools
