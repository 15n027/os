#!/usr/bin/env python
import re
import struct
import subprocess
import sys

def getsyms(fname):
    rgx = re.compile("([0-9a-f]+) T idt_entry_0x([0-9a-f][0-9a-f])")
    ret = {}
    out = subprocess.check_output("$NM %s" % fname, shell=True)
    for line in out.split("\n"):
        mtch = rgx.match(line)
        if mtch:
            ret[int(mtch.group(2), 16)] = int(mtch.group(1), 16)
    return ret

def genentry(vector, syms):
    p_dpl_type = 0x80 | 0 | 0x0e
    ist = 0
    kern_cs = 0x08
    sym = syms[vector]
    return struct.pack("<HHBBHII", sym & 0xffff, kern_cs, ist, p_dpl_type, (sym >> 16) & 0xffff, sym >> 32, 0)

def main():
    syms = getsyms(sys.argv[1])
    idt = open(sys.argv[2], "w")
    for i in range(256):
        idt.write(genentry(i, syms))
    idt.close()
    return 0

if __name__ == "__main__":
   sys.exit(main())
